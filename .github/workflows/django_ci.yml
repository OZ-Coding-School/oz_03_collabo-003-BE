name: Django CI

on:
  push:
    branches: [ "*" ]  # 모든 브랜치에 대해 실행

env:
  DOCKER_IMAGE: joonhoseong/allthe  # Docker Hub 레포지토리 이름으로 변경해주세요

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # 코드 체크아웃
    - uses: actions/checkout@v2
    
    # Python 설정
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    # .env 파일 생성
    - name: Create .env file
      run: |
        echo "DB_ENGINE=${{ secrets.DB_ENGINE }}" > .env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
        echo "KAKAO_APP_KEY=${{ secrets.KAKAO_APP_KEY }}" >> .env
        echo "KAKAO_SECRET=${{ secrets.KAKAO_SECRET }}" >> .env
        echo "KAKAO_URI=${{ secrets.KAKAO_URI }}" >> .env
        echo "GOOGLE_APP_KEY=${{ secrets.GOOGLE_APP_KEY }}" >> .env
        echo "GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }}" >> .env
        echo "GOOGLE_URI=${{ secrets.GOOGLE_URI }}" >> .env
        echo "NAVER_APP_KEY=${{ secrets.NAVER_APP_KEY }}" >> .env
        echo "NAVER_SECRET=${{ secrets.NAVER_SECRET }}" >> .env
        echo "NAVER_URI=${{ secrets.NAVER_URI }}" >> .env
        echo "FRONT_DOMAIN=${{ secrets.FRONT_DOMAIN }}" >> .env
        echo "PORTONE_APP_KEY=${{ secrets.PORTONE_APP_KEY }}" >> .env
        echo "PORTONE_SECRET=${{ secrets.PORTONE_SECRET }}" >> .env
        echo "PORTONE_CHANNEL_KEY=${{ secrets.PORTONE_CHANNEL_KEY }}" >> .env
    
    # 의존성 설치
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # Django 서버 실행 및 테스트
    - name: Run Django server
      run: |
        python manage.py migrate
        python manage.py runserver &
        sleep 5
        if ! curl -s http://localhost:8000 > /dev/null; then
          echo "Django server is not running"
          exit 1
        fi
    
    # Docker Buildx 설정
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    # DockerHub 로그인
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # Docker 이미지 빌드 및 푸시
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          ${{ env.DOCKER_IMAGE }}:latest