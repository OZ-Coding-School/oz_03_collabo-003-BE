name: Django CD

on:
  pull_request:
    branches: [ develop ]
    types: [ closed ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: docker-compose build

    - name: Push Docker image to registry (optional)
      # 필요한 경우 Docker 이미지를 레지스트리에 푸시하는 단계 추가
      # 예: docker-compose push

    - name: Deploy to NCP server
      env:
        DB_ENGINE: ${{ secrets.DB_ENGINE }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        NCP_SERVER_IP: ${{ secrets.NCP_SERVER_IP }}
        NCP_SSH_PRIVATE_KEY: ${{ secrets.NCP_SSH_PRIVATE_KEY }}
      run: |
        # .env 파일 생성
        echo "DB_ENGINE=$DB_ENGINE" >> .env
        echo "DB_NAME=$DB_NAME" >> .env
        echo "DB_USER=$DB_USER" >> .env
        echo "DB_PASSWORD=$DB_PASSWORD" >> .env
        echo "DB_HOST=$DB_HOST" >> .env
        echo "DB_PORT=$DB_PORT" >> .env

        # SSH 키 등록
        mkdir -p ~/.ssh
        echo "$NCP_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # NCP 서버에 접속하여 배포 스크립트 실행
        ssh -o StrictHostKeyChecking=no root@$NCP_SERVER_IP 'bash -s' < ./deploy.sh
