name: Django CD

on:
  pull_request:
    branches: [ develop ]  # develop 브랜치에 대한 pull request가 merge될 때 실행
    types: [ closed ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
    - name: Deploy to NCP server
      env:
        DB_ENGINE: ${{ secrets.DB_ENGINE }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        NCP_SERVER_IP: ${{ secrets.NCP_SERVER_IP }}
        NCP_SSH_PRIVATE_KEY: ${{ secrets.NCP_SSH_PRIVATE_KEY }}
        DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/allthe:latest  # Docker Hub 이미지 이름
      run: |
        # SSH 키 등록
        mkdir -p ~/.ssh
        echo "$NCP_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # NCP 서버에 접속하여 배포 스크립트 실행
        ssh -o StrictHostKeyChecking=no root@$NCP_SERVER_IP "
          # 작업 디렉토리 설정 (디렉토리 생성 포함)
          mkdir -p /path/to/your/project && \
          cd /path/to/your/project && \
          # .env 파일 생성 (heredoc 사용, NCP 서버에서 실행)
          cat <<EOF > .env
          DB_ENGINE=$DB_ENGINE
          DB_NAME=$DB_NAME
          DB_USER