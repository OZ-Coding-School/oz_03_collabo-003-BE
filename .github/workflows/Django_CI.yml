name: Django CI

on:
  push:
    branches: [ '*' ]  # 모든 브랜치에 푸시될 때 실행
  pull_request:
    branches: [ develop, main ]  # develop, main 브랜치에 대한 pull request 생성 시 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3  # 코드 체크아웃

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build and run tests
      env:  # GitHub Actions Secrets에서 환경 변수 가져오기
        DB_ENGINE: ${{ secrets.DB_ENGINE }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
      run: |
        # .env 파일 생성
        echo "DB_ENGINE=$DB_ENGINE" >> .env
        echo "DB_NAME=$DB_NAME" >> .env
        echo "DB_USER=$DB_USER" >> .env
        echo "DB_PASSWORD=$DB_PASSWORD" >> .env
        echo "DB_HOST=$DB_HOST" >> .env
        echo "DB_PORT=$DB_PORT" >> .env

        # docker-compose를 사용하여 빌드
        docker-compose build

        # 마이그레이션 실행
        docker-compose run --rm web python manage.py migrate

        # 테스트 실행
        docker-compose run --rm web python manage.py test

        # .env 파일 삭제
        rm .env